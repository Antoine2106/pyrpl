pyrpl: # General configuration of the software:
  name: test_refactor
  gui: true # autostart gui
  loglevel: info
  # level of logged information.
  # 'debug' outputs everything
  # 'infi' is default level
  # 'warning' only shows warnings and errors
  # 'error' only shows errors
  modules: # SoftwareModules to load (in addition to IqManager, AsgManager, PidManager, ScopeManager)
    - NetworkAnalyzer
    - SpectrumAnalyzer
  dock_positions: !!binary |
    AAAA/wAAAAD9AAAAAQAAAAIAAAerAAAD0PwBAAAAAvwAAAAAAAADiQAAA4kA/////AIAAAAD+wAA
    AAwAcwBjAG8AcABlAHMDAAABDgAAABQAAAONAAACVfsAAAAGAGkAcQBzAQAAABUAAAKxAAABaAD/
    ///7AAAACABhAHMAZwBzAQAAAsoAAAEbAAAAlAD////8AAADjQAABB4AAAQeAP////wCAAAAAvwA
    AAAVAAABtAAAARMBAAAU+gAAAAECAAAAB/sAAAAEAG4AYQEAAAAA/////wAAAP4A////+wAAACIA
    cwBwAGUAYwB0AHIAdQBtAF8AYQBuAGEAbAB5AHoAZQByAQAAAAD/////AAAAswD////7AAAAIgBz
    AHAAZQBjAHQAcgB1AG0AIABhAG4AYQBsAHkAegBlAHIBAAAAAP////8AAAAAAAAAAPsAAAAUAEIA
    YQBzAGUATQBvAGQAdQBsAGUBAAAAAP////8AAAAAAAAAAPsAAAAIAGkAaQByAHMBAAAAAP////8A
    AAB/AP////sAAAAgAG4AZQB0AHcAbwByAGsAXwBhAG4AYQBsAHkAegBlAHIBAAAAAP////8AAAAA
    AAAAAPsAAAAKAHMAYwBvAHAAZQEAAAAA/////wAAAAAAAAAA+wAAAAgAcABpAGQAcwEAAAHNAAAC
    GAAAAhgA////AAAHqwAAAAAAAAAEAAAABAAAAAgAAAAI/AAAAAA=
  window_position:
  - -8
  - -8
  - 1963
  - 1017
redpitaya:
  hostname: 10.214.1.28
  password: root
  user: root
  port: 2222
  frequency_correction: 1.0
  filename: fpga//red_pitaya.bin
  reloadfpga: true
  monitor_server_name: monitor_server
asg1:
  offset: 0.0
  waveform: sin
  output_direct: off
  frequency: 100.000761449337
  amplitude: 1.0
  trigger_source: immediately
asg2:
  offset: 0.0
  waveform: sin
  output_direct: off
  frequency: 0
  amplitude: 1.0
  trigger_source: immediately
asgs: {}
iqs: {}
pids: {}
scopes: {}
iirs: {}
na: {acbandwidth: [0], output_direct: off, rbw: [151], curve_name: na_curve, input: adc1}
spectrum_analyzer: {window: flattop, input: asg1, span: [122071], center: 1000000.0}
hk: {}
ams: {}
scope: {trigger_delay: 0.0, trigger_source: asg1, input2: adc2, average: true, duration: 0.067108864,
  input1: adc1}
sampler: {}
adc1: {}
adc2: {}
iq1: {bandwidth: [0, 0], output_signal: quadrature, output_direct: off, input: adc1}
pid1: {output_direct: off, inputfilter: [0, 0, 0, 0], input: adc1}
pid2: {input: adc2, output_direct: off, inputfilter: [0, 0, 0, 0]}
pid3: {output_direct: off, inputfilter: [0, 0, 0, 0], input: adc1}
pid4: {input: adc2, output_direct: off, inputfilter: [0, 0, 0, 0]}
iir: {output_direct: off, input: adc1}
