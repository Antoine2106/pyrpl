# for setup: must go into travis setup and insert ip address and other data of
# the redpitaya device, and disable concurrent builds to avoid conflicts
# between tests of different python versions

# lots of stuff here comes from https://gist.github.com/dan-blanchard/7045057

env:
- AUTOCORRETPEP8=0 DISPLAY=:99.0
# REDPITAYA variables are defined in travis account (encrypted)

language: python
# nosetests is only executed for 2.7 and 3.5, but we still test the
# installation for other python versions
python:
  - "2.7"
  - "3.5"
  - "3.3"
  - "3.4"
  - "3.6"

notifications:
  email: false

before_install:
  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - chmod +x miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # The next lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
  - sudo rm -rf /dev/shm
  - sudo ln -s /run/shm /dev/shm
  # starts gui support, see https://docs.travis-ci.com/user/gui-and-headless-browsers/
  - sh -e /etc/init.d/xvfb start
  # give it some time to start
  - sleep 3

install:
  # we get issues with building numpy etc. if we do not include those in the next line
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy scipy paramiko pandas nose pip pyqt=4
  - source activate test-environment
  # python 2.7 doesnt come with coveralls, but we dont want to put it into the
  # requirements in setup.py
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      conda install --yes -c dan_blanchard python-coveralls nose-cov;
    fi
  # alternative location:
  # conda install --yes -c conda-forge coveralls;
  # overwrite default global config file with a custom one for travis (allows slower communication time)
  - \cp ./travis_global_config.yml ./pyrpl/config/global_config.yml
  - python setup.py install

# Run test
script:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]] || [[ "$TRAVIS_PYTHON_VERSION" == "3.5" ]]; then
      nosetests;
    fi

# Calculate coverage
after_success:
  - coveralls --config_file .coveragerc

# upload autodoc to github pages
# deploy:
#  provider: pages
#  skip_cleanup: true
#  github_token: $GITHUB_TOKEN # Set in travis-ci.org dashboard
#  on:
#    branch: master
